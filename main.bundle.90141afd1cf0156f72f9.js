!function(t){function e(e){for(var r,a,s=e[0],c=e[1],u=e[2],f=0,h=[];f<s.length;f++)a=s[f],o[a]&&h.push(o[a][0]),o[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(t[r]=c[r]);for(l&&l(e);h.length;)h.shift()();return i.push.apply(i,u||[]),n()}function n(){for(var t,e=0;e<i.length;e++){for(var n=i[e],r=!0,s=1;s<n.length;s++){var c=n[s];0!==o[c]&&(r=!1)}r&&(i.splice(e--,1),t=a(a.s=n[0]))}return t}var r={},o={0:0},i=[];function a(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=t,a.c=r,a.d=function(t,e,n){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)a.d(n,r,function(e){return t[e]}.bind(null,r));return n},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="";var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=e,s=s.slice();for(var u=0;u<s.length;u++)e(s[u]);var l=c;i.push([333,1]),n()}({12:function(t,e,n){"use strict";function r(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}n.d(e,"a",function(){return i});var i=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,i;return e=t,i=[{key:"random",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return Math.floor(Math.random()*t)+e}},{key:"normalizeText",value:function(t){return t?t.toLowerCase().trim():""}},{key:"shuffle",value:function(t){for(var e=r(t),n=e.length-1;n>0;n-=1){var o=Math.floor(Math.random()*(n+1)),i=[e[o],e[n]];e[n]=i[0],e[o]=i[1]}return e}}],(n=null)&&o(e.prototype,n),i&&o(e,i),t}()},126:function(t,e){t.exports='<main>\n  <div class="container">\n\n  </div>\n</main>\n<footer>\n  <p>\n    <span>Â© 2019</span>\n    <a href="mailto:aleksei.bulgak@gmail.com">Aleksei Bulgak</a>\n    <a href="https://github.com/aleksei-bulgak-study" target="_blank" class="github">\n      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true">\n        <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path>\n      </svg>\n    </a>\n  </p>\n</footer>'},127:function(t,e,n){t.exports='<div class="home">\n  <div class="home_screens top">\n    <img src="'+n(309)+'" alt="battle" />\n    <img src="'+n(310)+'" alt="monster" />\n  </div>\n  <div class="home_content">\n    <h1 class="home_title">Welcome!</h1>\n    <p class="home_message">To start the game please press button below</p>\n    <button class="home_button play navigable">Start</button>\n    <button class="home_button score navigable">Score Board</button>\n  </div>\n\n  <div class="home_screens bottom">\n    <img src="'+n(311)+'" alt="monster-attack" />\n    <img src="'+n(312)+'" alt="rip" />\n  </div>\n</div>'},128:function(t,e){t.exports='<div class="login">\n  <form class="login_form">\n    <div class="login_content">\n      <label class="login_label" for="name">Enter Nickname</label>\n      <input class="login_nickname navigable" id="nickname" name="name" type="text" value=""/>\n      <label class="error"></label>\n    </div>\n    <button class="login_button navigable">Play</button>\n  </form>\n</div>\n'},129:function(t,e){t.exports="<canvas></canvas>\n"},130:function(t,e){t.exports='<div class="task-container">\n  <h1 class="task-container_title">Please choose task from the list below:</h1>\n  <div id="math" class="task-container_element navigable" tabindex="0">\n    <span>Math</span>\n  </div>\n  <div id="translation" class="task-container_element navigable" tabindex="1">\n    <span>Translate</span>\n  </div>\n  <div id="audition" class="task-container_element navigable" tabindex="2">\n    <span>Audition</span>\n  </div>\n  <div id="word" class="task-container_element navigable" tabindex="3">\n    <span>Word construction</span>\n  </div>\n</div>\n'},131:function(t,e){t.exports='<div class="modal">\n  <div class="modal_content"></div>\n</div>\n'},132:function(t,e){t.exports='<div class="task">\n  <p class="task_title">Please enter only the integer part of the result number</p>\n  <p class="task_description"></p>\n  <input type="number" class="task_input navigable" />\n  <button class="task_submit navigable">Submit</button>\n</div>\n'},133:function(t,e){t.exports='<div class="task">\n  <p class="task_title">Please enter translation of work specified below</p>\n  <p class="task_description"></p>\n  <input type="text" class="task_input navigable" />\n  <button class="task_submit navigable">Submit</button>\n</div>\n'},134:function(t,e){t.exports='<div class="task">\n  <p class="task_title">Please enter word that was pronounces</p>\n  <button class="task_play navigable"></button>\n  <input type="text" class="task_input navigable" />\n  <button class="task_submit navigable">Submit</button>\n</div>\n'},135:function(t,e){t.exports='<div class="task">\n  <p class="task_title">Please reorder letter to form a word</p>\n  <div class="task_description letter_container"></div>\n  <button class="task_submit">Submit</button>\n</div>'},136:function(t,e){t.exports='<div class="score-container">\n  <h1 class="score-container_title">Scores:</h1>\n  <table class="score-container_table">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Score</th>\n      </tr>\n    </thead>\n    <tbody>\n\n    </tbody>\n  </table>\n  <button class="restart navigable">Try Again</button>\n</div>\n'},137:function(t,e){t.exports='<div class="score-container">\n  <span class="score-container_title">Calculating scores. Please wait.</span>\n</div>\n'},304:function(t,e,n){var r=n(305);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},305:function(t,e,n){e=t.exports=n(20)(!1);var r=n(306)(n(307));e.push([t.i,"body {\n  padding: 0;\n  margin: 0;\n\n  font-family: 'Open Sans', sans-serif;\n  font-size: 16px;\n}\n\n.container {\n  width: 100vw;\n  height: 100vh;\n\n  background-image: url("+r+");\n  background-repeat: no-repeat;\n}\n\nfooter {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  text-align: center;\n}\n\nfooter a.github {\n  margin: 1%;\n}",""])},307:function(t,e,n){t.exports=n.p+"images/1b5df9a6591acf906bb4637e96360d95.png"},309:function(t,e,n){t.exports=n.p+"images/859c792388d9709e5c426841b84775c7.png"},310:function(t,e,n){t.exports=n.p+"images/c87777473653fd12315f36127a8025f0.png"},311:function(t,e,n){t.exports=n.p+"images/263fda72f55557b04fa9cd1652ad7d8b.png"},312:function(t,e,n){t.exports=n.p+"images/b9a59a06fa818e2a7122730d191aea42.png"},313:function(t,e,n){var r=n(314);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},314:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,"div.home {\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\ndiv.home_content {\n  text-align: center;\n}\n\nh1.home_title {\n  margin: 5px;\n  font-weight: bold;\n  font-size: 5em;\n  color: white;\n}\n\n.home_message {\n  color: white;\n  font-weight: bold;\n  font-size: 1.3em;\n}\n\n.home_button {\n  padding: 1% 3%;\n  display: block;\n  margin: 10px auto;\n  border: 0;\n  background-color: #96c790;\n  color: white;\n  font-weight: bold;\n  font-size: 1.5em;\n  cursor: pointer;\n}\n\n.home_screens img{\n  position: absolute;\n  max-width: 20%;\n      box-shadow: 0px 0px 20px 3px #b8cdf5;\n}\n\n.home_screens img:first-child{\n  left: 1%;\n}\n\n.home_screens img:last-child{\n  right: 1%;\n}\n\n.home_screens.top img {\n  top: 1%;\n}\n\n.home_screens.bottom img {\n  bottom: 1%;\n}",""])},315:function(t,e,n){var r=n(316);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},316:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,"div.login {\n  width: 100vw;\n  height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n\n.login_form {\n  text-align: center;\n}\n\n.login_content {\n  margin: 1em;\n}\n\n.login_label {\n  display: block;\n  color: white;\n  font-weight: bold;\n  font-size: 2em;\n}\n\n.login_nickname {\n  display: block;\n  margin: 1em auto;\n  font-size: 1.6em;\n}\n\n.login_button {\n  padding: 1% 3%;\n  border: 0;\n  background-color: #96c790;\n  color: white;\n  font-weight: bold;\n  font-size: 1.5em;\n  cursor: pointer;\n}\n\nlabel.error {\n  display: block;\n  text-align: center;\n  font-size: 1.5em;\n  color: red;\n}\n",""])},317:function(t,e,n){var r=n(318);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},318:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,"canvas {\n  position: fixed;\n  background-color: transparent;\n}\n",""])},319:function(t,e,n){var r=n(320);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},320:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,".task-container > h1 {\n  text-align: center;\n  color: #476144;\n}\n\n.task-container_element {\n  padding: 2% 5%;\n  margin: 5px 5px;\n  font-size: 1.5em;\n  color: white;\n  background-color: #96c790;\n  text-align: center;\n  overflow: hidden;\n}\n\n.task-container_element:hover {\n  cursor: pointer;\n}\n\n.task-container_element:active {\n  box-shadow: inset 0 0 10px #005bb1;\n}\n\n.task-container_element:first-child {\n  margin-top: 10px;\n}\n\n.task-container_element:last-child {\n  margin-bottom: 10px;\n}\n",""])},321:function(t,e,n){var r=n(322);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},322:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,".modal {\n  position: fixed;\n  z-index: 1;\n  padding-top: 100px;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.4);\n}\n\n/* Modal Content */\n.modal_content {\n  position: relative;\n  background-color: #e3f1fc;\n  margin: auto;\n  padding: 0;\n  border: 1px solid #888;\n  width: 30%;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n}\n",""])},323:function(t,e,n){var r=n(324);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},324:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,".task {\n  padding: 5% 10%;\n  font-size: 1.5em;\n  color: gray;\n  border: 0;\n  background-color: #e3f1fc;\n  text-align: center;\n}\n\n.task_input {\n  max-width: 100%;\n  font-size: 1.2em;\n}\n\n.task_submit {\n  margin: 1em auto;\n  display: block;\n  padding: 5% 10%;\n  background-color: #96c790;\n  color: white;\n  border: 0;\n  font-weight: bold;\n  font-size: 1.2em;\n  cursor: pointer;\n}\n",""])},325:function(t,e,n){var r=n(326);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},326:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,".task {\n  padding: 5% 10%;\n  font-size: 1.5em;\n  color: gray;\n  border: 0;\n  background-color: #e3f1fc;\n  text-align: center;\n}\n\n.task_input {\n  max-width: 100%;\n  font-size: 1.2em;\n}\n\n.task_submit {\n  margin: 1em auto;\n  display: block;\n  padding: 5% 10%;\n  background-color: #96c790;\n  color: white;\n  border: 0;\n  font-weight: bold;\n  font-size: 1.2em;\n  cursor: pointer;\n}\n",""])},327:function(t,e,n){var r=n(328);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},328:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,".task {\n  padding: 3% 15%;\n  font-size: 1.5em;\n  color: gray;\n  border: 0;\n  background-color: #e3f1fc;\n  text-align: center;\n}\n\n.task_input {\n  max-width: 100%;\n  font-size: 1.2em;\n}\n\n.task_play{\n  display: block;\n  width: 50px;\n  height: 50px;\n  padding: 0 0;\n  background: #6495ed;\n  border: none;\n  border-radius: 100%;\n  margin: 1em auto;\n  cursor: pointer;\n  font-size: 1.2em;\n  outline: none;\n}\n\n.task_play::after {\n  content: '';\n  display: inline-block;\n  position: relative;\n  top: 1px;\n  left: 3px;\n  border-style: solid;\n  border-width: 10px 0 10px 20px;\n  border-color: transparent transparent transparent white;\n}\n\n.task_play:active,\n.task_play:focus\n {\n  background: #005bb1; \n  box-shadow: inset 0 0 10px #005bb1;\n}\n\n.task_submit {\n  margin: 1em auto;\n  display: block;\n  padding: 5% 10%;\n  background-color: #96c790;\n  color: white;\n  border: 0;\n  font-weight: bold;\n  font-size: 1.2em;\n  cursor: pointer;\n}\n",""])},329:function(t,e,n){var r=n(330);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},330:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,".letter {\n  display: inline-block;\n  margin: 1% 3%;\n  border: 1px solid black;\n  box-sizing: border-box;\n}\n\n.selected {\n  box-shadow: 0 0 10px #96b100;\n}\n\n.letter_value {\n  padding: 0 0.5em;\n  cursor: move;\n}\n",""])},331:function(t,e,n){var r=n(332);"string"==typeof r&&(r=[[t.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(21)(r,o);r.locals&&(t.exports=r.locals)},332:function(t,e,n){(t.exports=n(20)(!1)).push([t.i,"div.score-container {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n}\n\n.score-container_title {  \n  display: block;\n  color: white;\n  font-weight: bold;\n  font-size: 3em;\n  text-align: center;\n}\n\ntable {\n  width: 60%;\n  border-collapse: collapse;\n  text-align: center;\n  background-color: rgba(150, 199, 144, 0.5);\n  overflow: hidden;\n}\n\ntable th {\n  padding: 1% 5%;\n  font-weight: bold;\n  color: #073899;\n  background-color: #97ca92;\n}\n\ntable>tbody>tr:hover {\n  background-color: #becaf8;\n}\n\ntable td {\n  position: relative;\n  padding: 1% 5%;\n  color: #666699;\n  border-top: 1px solid #e8edff;\n}\n\ntbody>tr:nth-child(2n + 1) {\n  background-color: #e8edff;\n}\n\nbutton.restart {\n  display: block;\n  margin-top: 1em;\n  padding: 1% 3%;\n  border: 0;\n  background-color: #96c790;\n  color: white;\n  font-weight: bold;\n  font-size: 1.5em;\n  cursor: pointer;\n}\n",""])},333:function(t,e,n){"use strict";n.r(e);n(138),n(304);var r=n(126),o=n.n(r);function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var a={left:37,right:39,up:38,down:40},s={next:1,prev:-1},c={selector:".navigable",class:"navigable"},u=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,r=[{key:"init",value:function(){document.body.innerHTML=o.a,document.body.addEventListener("keydown",t._navegation)}},{key:"_navegation",value:function(e){var n=e.keyCode;n===a.left||n===a.up?(e.preventDefault(),t.focusOnElement(s.prev)):n!==a.right&&n!==a.down||(e.preventDefault(),t.focusOnElement(s.next))}},{key:"focusOnElement",value:function(t){var e=document.body.querySelectorAll(c.selector),n=document.activeElement;if(n&&e.length>0)if(n.classList.contains(c.class)){var r=Array.prototype.indexOf.call(e,n);e[r=(r=(r=-1===r?0:r+t)<0?e.length-1:r)>=e.length?0:r].focus()}else e[0].focus()}}],(n=null)&&i(e.prototype,n),r&&i(e,r),t}(),l=n(127),f=n.n(l);n(313);function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var d="div.container",p=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,r=[{key:"show",value:function(){return document.body.querySelector(d).innerHTML=f.a,document.body.querySelector("button.play").focus(),t.onPlay()}},{key:"hide",value:function(){document.body.querySelector(d).innerHTML=""}},{key:"onPlay",value:function(){return new Promise(function(e){document.body.querySelector("button.play").addEventListener("click",function(){t.hide(),e("start")}),document.body.querySelector("button.score").addEventListener("click",function(){t.hide(),e("score")})})}}],(n=null)&&h(e.prototype,n),r&&h(e,r),t}(),m=n(128),v=n.n(m);n(315);function y(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var g="div.container",b="input#nickname",w="label.error",k="Nickname can not be null or empty",_=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,r=[{key:"show",value:function(){return document.body.querySelector(g).innerHTML=v.a,this.processLogin()}},{key:"hide",value:function(){document.body.querySelector(g).innerHTML=""}},{key:"processLogin",value:function(){var e=this;return t.onPlay().catch(function(){return document.body.querySelector(w).innerHTML=k,e.processLogin()})}},{key:"onPlay",value:function(){var t=document.body.querySelector(b);return t.focus(),new Promise(function(e,n){document.body.querySelector("button").addEventListener("click",function(r){r.preventDefault();var o=t.value;o&&e(o),n()})})}}],(n=null)&&y(e.prototype,n),r&&y(e,r),t}(),x=n(129),O=n.n(x);n(317);function S(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var P={images:{count:11,indexOfSplash:5,start:1,updateInterval:5,scale:.25,path:"./images/fireball/fireball_",ext:".png"},audio:{path:"./audio/fireball_attack.mp3"},step:5},A=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.ctx=e,this.attack=!1,this.index=P.images.start,this.updateInterval=0,this.images=[],this.audio=new Audio(P.audio.path),this.loadImages()}var e,n,r;return e=t,(n=[{key:"performAttack",value:function(t){return this.attack=!0,this.draw(t)}},{key:"draw",value:function(t){var e=this;return new Promise(function(n){e._playSound(),e._draw(t,n)})}},{key:"_playSound",value:function(){this.audio.play()}},{key:"_stopSound",value:function(){this.audio.pause(),this.audio.currentTime=0}},{key:"_draw",value:function(t,e){var n=this;if(this.reqId&&cancelAnimationFrame(this.reqId),this.attack){this.point.width>=this.finishPoint.width&&this.index===P.images.count&&(this.index=P.images.start,this.updateInterval=0,this.start=this.startPoint,this.attack=!1,this._stopSound(),t(),e()),this.index===P.images.indexOfSplash&&this.point.width<this.finishPoint.width&&(this.index=P.images.start),this.point.width>=this.finishPoint.width&&this.index<P.images.indexOfSplash&&(this.index=P.images.indexOfSplash);var r=this.images[this.index],o=r.height*P.images.scale,i=r.width*P.images.scale;this.ctx.drawImage(r,this.point.width,this.point.height,i,o),this.updateInterval===P.images.updateInterval&&(this.index+=1,this.updateInterval=0),this.updateInterval+=1,this.index<P.images.indexOfSplash&&(this.point.width+=P.step)}this.reqId=window.requestAnimationFrame(function(){return n._draw(t,e)})}},{key:"loadImages",value:function(){for(var t=P.images.start;t<=P.images.count;t+=1){var e=new Image;e.src=P.images.path+t+P.images.ext,this.images[t]=e}}},{key:"show",set:function(t){this.attack=t}},{key:"start",set:function(t){this.startPoint=t,this.point=JSON.parse(JSON.stringify(t))}},{key:"finish",set:function(t){this.finishPoint=t}}])&&S(e.prototype,n),r&&S(e,r),t}(),E=n(5);function T(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function R(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){T(i,r,o,a,s,"next",t)}function s(t){T(i,r,o,a,s,"throw",t)}a(void 0)})}}function j(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var I={breath:{intervalStep:1,default:0},death:{period:2}},C=function(){function t(e,n,r){if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.name=e,this.cfg=r,this.ctx=n,this.name=e,this.hp=r.hp.value,this.breath={interval:0,current:I.breath.default},this.imagesLoadedCount=0,this.handAngle=0,!(this instanceof t?this.constructor:void 0))throw Error("It is not allowed to create direct instance of AbstractCharacter")}var e,n,r;return e=t,(n=[{key:"draw",value:function(){this.recalculateBreath(),this.drawLegs(),this.drawLeftArm(),this.drawBody(),this.drawRightArm(),this.drawHead(),this.drawHP(),this.drawName(),this._requestAnimationFrame()}},{key:"_requestAnimationFrame",value:function(){this._cancelAnimationFrame(),this.reqId=requestAnimationFrame(this.draw.bind(this))}},{key:"_cancelAnimationFrame",value:function(){this.reqId&&cancelAnimationFrame(this.reqId)}},{key:"attack",value:function(){var t=R(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",e());case 1:case"end":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:"death",value:function(){var t=R(regeneratorRuntime.mark(function t(){var e=this;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return this._cancelAnimationFrame(),this.deathTime=performance.now(),t.abrupt("return",new Promise(function(t){e._death(t)}));case 3:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:"_death",value:function(t){var e=this;if(this._getExectionTime(this.deathTime)>I.death.period)t();else{var n=document.body.offsetHeight-this.dead.height-10,r=document.body.offsetWidth*this.cfg.body.ratio.width;this.ctx.drawImage(this.dead,r,n),this._cancelAnimationFrame(),this.reqId=requestAnimationFrame(function(){return e._death(t)})}}},{key:"_getExectionTime",value:function(t){return(performance.now()-t)/1e3}},{key:"recalculateBreath",value:function(){this.breath.interval===this.cfg.breath.interval&&(this.breath.interval=I.breath.default,this.breath.current+=this.cfg.breath.step,(this.breath.current>this.cfg.breath.max||this.breath.current<this.cfg.breath.min)&&(this.cfg.breath.step=-this.cfg.breath.step)),this.breath.interval+=I.breath.intervalStep}},{key:"drawName",value:function(){var t=document.body.offsetHeight*this.cfg.name.position.height,e=document.body.offsetWidth*this.cfg.name.position.width;this.ctx.font=this.cfg.text.style,this.ctx.fillText(this.name,e,t)}},{key:"drawHP",value:function(){var t=document.body.offsetHeight*this.cfg.hp.position.height,e=document.body.offsetWidth*this.cfg.hp.position.width;this.ctx.fillStyle=this.getHpStatusColor(),this.ctx.font=this.cfg.text.style,this.ctx.fillText(this.hp,e,t),this.ctx.save()}},{key:"getHpStatusColor",value:function(){var t=this.cfg.hp.status.NORMAL.color;return this.hp<this.cfg.hp.status.AVERAGE.value&&(t=this.cfg.hp.status.AVERAGE.color),this.hp<this.cfg.hp.status.CRITICAL.value&&(t=this.cfg.hp.status.CRITICAL.color),t}},{key:"health",set:function(t){this.hp>t?this.hp-=t:this.hp=0},get:function(){return this.hp}}])&&j(e.prototype,n),r&&j(e,r),t}();function L(t){return(L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function M(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=[],r=!0,o=!1,i=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function q(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function H(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){q(i,r,o,a,s,"next",t)}function s(t){q(i,r,o,a,s,"throw",t)}a(void 0)})}}function W(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function F(t,e){return!e||"object"!==L(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function D(t){return(D=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function z(t,e){return(z=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var N={start:{height:.85*window.innerHeight,width:.35*document.body.offsetWidth},finish:{height:.85*window.innerHeight,width:.6*document.body.offsetWidth}},B=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=F(this,D(e).call(this,n,t,E))).weapon=r.initWeaponComponent(),r}var n,r,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&z(t,e)}(e,C),n=e,r=[{key:"initWeaponComponent",value:function(){var t=new A(this.ctx);return t.start=N.start,t.finish=N.finish,t}},{key:"build",value:function(){var t=H(regeneratorRuntime.mark(function t(){var e,n;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.all([this.loadCharacterPart(E.legs.image),this.loadCharacterPart(E.arms.image.left),this.loadCharacterPart(E.body.image),this.loadCharacterPart(E.head.image),this.loadCharacterPart(E.arms.image.right)]);case 2:return e=t.sent,n=M(e,5),this.legs=n[0],this.leftArm=n[1],this.body=n[2],this.head=n[3],this.rightArm=n[4],t.abrupt("return",this.draw());case 10:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:"loadCharacterPart",value:function(t){return new Promise(function(n){var r=new Image;r.src=e.getPath(t),r.onload=function(){return n(r)}})}},{key:"attack",value:function(){var t=H(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this.weapon.performAttack(e));case 1:case"end":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:"drawHead",value:function(){var t=document.body.offsetHeight*E.head.ratio.height-this.breath.current,e=document.body.offsetWidth*E.head.ratio.width,n=this.head.width/E.scaleRation,r=this.head.height/E.scaleRation;this.ctx.drawImage(this.head,e,t,n,r)}},{key:"drawBody",value:function(){var t=document.body.offsetHeight*E.body.ratio.height,e=document.body.offsetWidth*E.body.ratio.width,n=this.body.width/E.scaleRation,r=this.body.height/E.scaleRation;this.ctx.drawImage(this.body,e,t,n,r)}},{key:"drawLegs",value:function(){var t=document.body.offsetHeight*E.legs.ratio.height,e=document.body.offsetWidth*E.legs.ratio.width,n=this.legs.width/E.scaleRation,r=this.legs.height/E.scaleRation;this.ctx.drawImage(this.legs,e,t,n,r)}},{key:"drawLeftArm",value:function(){var t=document.body.offsetHeight*E.arms.ratio.left.height-this.breath.current,e=document.body.offsetWidth*E.arms.ratio.left.width,n=this.leftArm.width/E.scaleRation,r=this.leftArm.height/E.scaleRation;this.ctx.save(),this.ctx.translate(e,t),this._rotateHand(),this.ctx.drawImage(this.leftArm,0,0,n,r),this.ctx.restore()}},{key:"_rotateHand",value:function(){this.ctx.rotate(this.handAngle*Math.PI/180),this.weapon.attack&&this.handAngle>-this.cfg.arms.attack.angle?this.handAngle-=this.cfg.arms.attack.step:!this.weapon.attack&&this.handAngle<0&&(this.handAngle+=this.cfg.arms.attack.step),0!==this.handAngle&&this.ctx.scale(-1,1)}},{key:"drawRightArm",value:function(){var t=document.body.offsetHeight*E.arms.ratio.right.height-this.breath.current,e=document.body.offsetWidth*E.arms.ratio.right.width,n=this.rightArm.width/E.scaleRation,r=this.rightArm.height/E.scaleRation;this.ctx.drawImage(this.rightArm,e,t,n,r)}}],o=[{key:"getPath",value:function(t){return E.image.path+t+E.image.ext}}],r&&W(n.prototype,r),o&&W(n,o),e}(),V=n(12),U=n(6);function J(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var K={images:{count:5,start:1,scale:1,updateInterval:5,path:"./images/magic/magic_",ext:".png"},audio:{path:"./audio/magic_attack.mp3"},step:5,time:2,numberOfMillisInSecond:1e3},G=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.ctx=e,this.attack=!1,this.index=K.images.start,this.updateInterval=0,this.images=[],this.loadImages(),this.audio=new Audio(K.audio.path)}var e,n,r;return e=t,(n=[{key:"performAttack",value:function(t){return this.attack=!0,this.start=performance.now(),this.draw(t)}},{key:"draw",value:function(t){var e=this;return new Promise(function(n){e._playSound(),e._draw(t,n)})}},{key:"_playSound",value:function(){this.audio.play()}},{key:"_stopSound",value:function(){this.audio.pause(),this.audio.currentTime=0}},{key:"_draw",value:function(t,e){var n=this;if(this.reqId&&cancelAnimationFrame(this.reqId),this.attack){this._getExectionTime()>=K.time&&(this.index=K.images.start,this.updateInterval=0,this.attack=!1,this._stopSound(),t(),e()),this.index>K.images.count&&(this.index=K.images.start);var r=this.images[this.index],o=r.height*K.images.scale,i=r.width*K.images.scale;this.ctx.drawImage(r,this.point.width,this.point.height,i,o),this.updateInterval===K.images.updateInterval&&(this.index+=1,this.updateInterval=0),this.updateInterval+=1}this.reqId=window.requestAnimationFrame(function(){return n._draw(t,e)})}},{key:"_getExectionTime",value:function(){return(performance.now()-this.start)/K.numberOfMillisInSecond}},{key:"loadImages",value:function(){for(var t=K.images.start;t<=K.images.count;t+=1){var e=new Image;e.src=K.images.path+t+K.images.ext,this.images[t]=e}}},{key:"show",set:function(t){this.attack=t}},{key:"position",set:function(t){this.point=JSON.parse(JSON.stringify(t))}}])&&J(e.prototype,n),r&&J(e,r),t}();function Q(t){return(Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function X(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=[],r=!0,o=!1,i=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Y(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function Z(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function $(t,e){return!e||"object"!==Q(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function tt(t){return(tt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function et(t,e){return(et=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var nt={position:{height:window.innerHeight*U.arms.attack.position.height,width:document.body.offsetWidth*U.arms.attack.position.width}},rt=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=$(this,tt(e).call(this,n,t,U))).weapon=r.initWeaponComponent(),r}var n,r,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&et(t,e)}(e,C),n=e,r=[{key:"initWeaponComponent",value:function(){var t=new G(this.ctx);return t.position=nt.position,t}},{key:"attack",value:function(){var t,e=(t=regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this.weapon.performAttack(e));case 1:case"end":return t.stop()}},t,this)}),function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){Y(i,r,o,a,s,"next",t)}function s(t){Y(i,r,o,a,s,"throw",t)}a(void 0)})});return function(t){return e.apply(this,arguments)}}()},{key:"build",value:function(){var t=this;return Promise.all([this.loadRandom(U.legs.image),this.loadRandom(U.arms.image),this.loadRandom(U.body.image),this.loadRandom(U.head.image),this.loadRandom(U.arms.image),this.load(e.getPath(U.death.image,""))]).then(function(e){var n=X(e,6);t.legs=n[0],t.leftArm=n[1],t.body=n[2],t.head=n[3],t.rightArm=n[4],t.dead=n[5]}).then(function(){return t.draw()})}},{key:"loadRandom",value:function(t){return this.load(e.getRandomPath(t))}},{key:"load",value:function(t){return new Promise(function(e){var n=new Image;n.src=t,n.onload=function(){return e(n)}})}},{key:"drawHead",value:function(){var t=document.body.offsetHeight*U.head.ratio.height-this.breath.current,e=document.body.offsetWidth*U.head.ratio.width;this.ctx.drawImage(this.head,e,t)}},{key:"drawBody",value:function(){var t=document.body.offsetHeight*U.body.ratio.height,e=document.body.offsetWidth*U.body.ratio.width;this.ctx.drawImage(this.body,e,t)}},{key:"drawLegs",value:function(){var t=document.body.offsetHeight*U.legs.ratio.height,e=document.body.offsetWidth*U.legs.ratio.width;this.ctx.drawImage(this.legs,e,t)}},{key:"drawLeftArm",value:function(){var t=this.leftArm.width-U.arms.position.left.width,e=document.body.offsetHeight*U.arms.ratio.left.height-this.breath.current,n=document.body.offsetWidth*U.arms.ratio.left.width;this.ctx.translate(n+t,e),this._rotateHand(),this.ctx.drawImage(this.leftArm,U.arms.position.left.width,0,t,this.leftArm.height,-t,0,t,this.leftArm.height),this.ctx.restore()}},{key:"_rotateHand",value:function(){this.ctx.rotate(this.handAngle*Math.PI/180),this.weapon.attack&&this.handAngle<this.cfg.arms.attack.angle?this.handAngle+=this.cfg.arms.attack.step:!this.weapon.attack&&this.handAngle>0&&(this.handAngle-=this.cfg.arms.attack.step)}},{key:"drawRightArm",value:function(){var t=document.body.offsetHeight*U.arms.ratio.right.height-this.breath.current,e=document.body.offsetWidth*U.arms.ratio.right.width;this.ctx.drawImage(this.rightArm,0,0,U.arms.position.right.width,this.rightArm.height,e,t,U.arms.position.right.width,this.rightArm.height)}}],o=[{key:"getPath",value:function(t,e){return U.image.path+t+e+U.image.ext}},{key:"getRandomPath",value:function(t){return e.getPath(t,V.a.random(U.numberOfMonsters))}}],r&&Z(n.prototype,r),o&&Z(n,o),e}(),ot=n(130),it=n.n(ot),at=(n(319),n(321),n(131)),st=n.n(at);function ct(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var ut="div",lt=".modal_content",ft=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,(n=[{key:"show",value:function(){this.container=document.createElement(ut),this.container.innerHTML=st.a,document.body.appendChild(this.container),this.modal=this.container.querySelector(lt)}},{key:"clean",value:function(){this.container.remove()}}])&&ct(e.prototype,n),r&&ct(e,r),t}(),ht=n(132),dt=n.n(ht);n(323);function pt(t){return(pt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function mt(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function vt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function yt(t,e){return!e||"object"!==pt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function gt(t){return(gt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function bt(t,e){return(bt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var wt=function(t){function e(){var t;if(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=yt(this,gt(e).call(this))).constructor===e)throw new Error("It is not allowed to create direct instance of  AbstractTaskComponent");return t}var n,r,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&bt(t,e)}(e,ft),n=e,(r=[{key:"execute",value:function(){var t,e=(t=regeneratorRuntime.mark(function t(){var e;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return this.show(),t.next=3,this.process();case 3:return e=t.sent,this.clean(),t.abrupt("return",e);case 6:case"end":return t.stop()}},t,this)}),function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){mt(i,r,o,a,s,"next",t)}function s(t){mt(i,r,o,a,s,"throw",t)}a(void 0)})});return function(){return e.apply(this,arguments)}}()}])&&vt(n.prototype,r),o&&vt(n,o),e}(),kt=n(95);function _t(t){return(_t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function xt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ot(t,e){return!e||"object"!==_t(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function St(t,e,n){return(St="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Pt(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function Pt(t){return(Pt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function At(t,e){return(At=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var Et={description:".task_description",input:".task_input",submit:".task_submit"},Tt=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),Ot(this,Pt(e).apply(this,arguments))}var n,r,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&At(t,e)}(e,wt),n=e,(r=[{key:"show",value:function(){St(Pt(e.prototype),"show",this).call(this),this.modal.innerHTML=dt.a}},{key:"process",value:function(){var t=this;return new Promise(function(e){var n=kt.a.getRandomTask(),r=t.modal.querySelector(Et.input);t.modal.querySelector(Et.description).innerHTML=n,t.modal.querySelector(Et.submit).addEventListener("click",function(){var t=parseInt(r.value,10);kt.a.isAnswerValid(n,t)&&e(!0),e(!1)})})}}])&&xt(n.prototype,r),o&&xt(n,o),e}(),Rt=n(133),jt=n.n(Rt),It=(n(325),n(64));function Ct(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Lt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,r=[{key:"getRandomTask",value:function(){var t=V.a.random(It.dictionary.length);return It.dictionary[t].word}},{key:"isAnswerValid",value:function(t,e){var n=V.a.normalizeText(e);return It.dictionary.filter(function(e){return e.word===t}).flatMap(function(t){return t.translations}).some(function(t){return t===n})}}],(n=null)&&Ct(e.prototype,n),r&&Ct(e,r),t}();function Mt(t){return(Mt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function qt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ht(t,e){return!e||"object"!==Mt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Wt(t,e,n){return(Wt="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Ft(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function Ft(t){return(Ft=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Dt(t,e){return(Dt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var zt={description:".task_description",input:".task_input",submit:".task_submit"},Nt=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),Ht(this,Ft(e).apply(this,arguments))}var n,r,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Dt(t,e)}(e,wt),n=e,(r=[{key:"show",value:function(){Wt(Ft(e.prototype),"show",this).call(this),this.modal.innerHTML=jt.a}},{key:"process",value:function(){var t=this;return new Promise(function(e){var n=Lt.getRandomTask(),r=t.modal.querySelector(zt.input);t.modal.querySelector(zt.description).innerHTML=n,t.modal.querySelector(zt.submit).addEventListener("click",function(){Lt.isAnswerValid(n,r.value)&&e(!0),e(!1)})})}}])&&qt(n.prototype,r),o&&qt(n,o),e}(),Bt=n(134),Vt=n.n(Bt),Ut=(n(327),n(65));function Jt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Kt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,r=[{key:"getRandomTask",value:function(){var t=V.a.random(Ut.words.length);return Ut.words[t]}},{key:"isAnswerValid",value:function(t,e){var n=V.a.normalizeText(e);return t===n&&Ut.words.some(function(e){return e===t})}},{key:"pronounce",value:function(t){return new Promise(function(e){var n=new SpeechSynthesisUtterance(V.a.normalizeText(t));n.onend=function(){return e(!0)},window.speechSynthesis.cancel(),window.speechSynthesis.speak(n)})}}],(n=null)&&Jt(e.prototype,n),r&&Jt(e,r),t}();function Gt(t){return(Gt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Qt(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function Xt(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){Qt(i,r,o,a,s,"next",t)}function s(t){Qt(i,r,o,a,s,"throw",t)}a(void 0)})}}function Yt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Zt(t,e){return!e||"object"!==Gt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function $t(t,e,n){return($t="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=te(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function te(t){return(te=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function ee(t,e){return(ee=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ne={input:".task_input",submit:".task_submit",play:".task_play"},re=function(t){function e(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),Zt(this,te(e).apply(this,arguments))}var n,r,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ee(t,e)}(e,wt),n=e,(r=[{key:"show",value:function(){$t(te(e.prototype),"show",this).call(this),this.modal.innerHTML=Vt.a}},{key:"process",value:function(){var t=this;return new Promise(function(e){var n=Kt.getRandomTask(),r=t.modal.querySelector(ne.input);t.modal.querySelector(ne.submit).addEventListener("click",function(){Kt.isAnswerValid(n,r.value)&&e(!0),e(!1)}),t.modal.querySelector(ne.play).addEventListener("click",Xt(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",Kt.pronounce(n));case 1:case"end":return t.stop()}},t,this)})))})}}])&&Yt(n.prototype,r),o&&Yt(n,o),e}(),oe=(n(329),n(135)),ie=n.n(oe),ae=n(66);function se(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var ce=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,r=[{key:"getRandomTask",value:function(){var t=ae.words[V.a.random(ae.words.length-1)].trim().split("");return V.a.shuffle(t)}},{key:"isAnswerValid",value:function(t){return-1!==ae.words.indexOf(V.a.normalizeText(t))}}],(n=null)&&se(e.prototype,n),r&&se(e,r),t}();function ue(t){return(ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function le(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function fe(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function he(t,e){return!e||"object"!==ue(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function de(t,e,n){return(de="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=pe(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function pe(t){return(pe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function me(t,e){return(me=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var ve={container:".letter_container",attribute:{name:"draggable",value:!0},selector:".letter",valueClass:"letter_value",attr:"tabindex",valueSelector:".letter_value"},ye={description:".task_description",submit:".task_submit"},ge={left:37,right:39,up:38,down:40,enter:13},be={right:1,left:-1},we={selector:".navigable",class:"navigable"},ke="selected",_e=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=he(this,pe(e).call(this))).letters=[],t}var n,r,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&me(t,e)}(e,wt),n=e,(r=[{key:"show",value:function(){de(pe(e.prototype),"show",this).call(this),this.modal.innerHTML=ie.a}},{key:"process",value:function(){var t=this;return new Promise(function(e){t._displayTask(),t._applyListeners();var n=t.modal.querySelector(ye.submit);n.addEventListener("click",function(){ce.isAnswerValid(t._buildAnswer())&&e(!0),e(!1)}),t.modal.addEventListener("keydown",function(t){t.keyCode===ge.enter&&n.click()})})}},{key:"clean",value:function(){de(pe(e.prototype),"clean",this).call(this)}},{key:"_applyListeners",value:function(){var t=this,e=this.modal.querySelector(ve.container);e.addEventListener("dragstart",this._dragStart.bind(this)),e.addEventListener("dragover",this._dragOver.bind(this)),e.addEventListener("dragenter",this._dragEnter.bind(this)),e.querySelectorAll(ve.valueSelector).forEach(function(e){e.addEventListener("drop",t._dragDrop.bind(t))}),e.addEventListener("keydown",this._navigation.bind(this))}},{key:"_dragStart",value:function(t){t.dataTransfer.setData("text/plain",t.target.id);var e=t.target.closest(ve.valueSelector);e&&(this.index=this._getIndexOfLetter(e),this.tmpArray=le(this.letters))}},{key:"_dragOver",value:function(t){t.target.closest(ve.valueSelector)&&t.preventDefault()}},{key:"_dragEnter",value:function(t){var e=t.target.closest(ve.valueSelector);e&&(t.preventDefault(),this.tmpArray=this._move(e,this.tmpArray))}},{key:"_move",value:function(t,e){var n=e,r=this._getIndexOfLetter(t);if(r!==this.index){var o=n.slice(0,this.index);o=o.concat(n.slice(this.index+1)),n=[].concat(le(o.slice(0,r)),[n[this.index]],le(o.slice(r))),this.index=r,this._updateValues(n)}return n}},{key:"_updateValues",value:function(t){this.modal.querySelectorAll(ve.valueSelector).forEach(function(e,n){e.innerHTML=t[n]})}},{key:"_dragDrop",value:function(t){t.target.closest(ve.valueSelector)&&(this.letters=this.tmpArray)}},{key:"_navigation",value:function(t){t.keyCode===ge.up?(t.stopPropagation(),this._selectFocused(t.target)):t.keyCode===ge.down?(t.stopPropagation(),this._deselectFocused()):t.keyCode===ge.left?(t.stopPropagation(),this._moveSelectedFocuced(t.target,be.left)):t.keyCode===ge.right&&(t.stopPropagation(),this._moveSelectedFocuced(t.target,be.right))}},{key:"_getNavigable",value:function(t){if(t){var e=t.closest(we.selector);if(e)return e}return this.modal.querySelector(we.selector)}},{key:"_selectFocused",value:function(t){this.selected||(this.selected=this._getNavigable(t),this.selected.focus(),this.selected.classList.add(ke))}},{key:"_deselectFocused",value:function(){this.selected.classList.remove(ke),this.selected=null}},{key:"_moveSelectedFocuced",value:function(t,e){var n=document.activeElement;this.selected?this._moveSelected(e):n.classList.contains(we.class)&&this._moveFocus(n,e)}},{key:"_moveSelected",value:function(t){var e=this.modal.querySelectorAll(we.selector);this.index=Array.prototype.indexOf.call(e,this.selected),e[this.index].classList.remove(ke);var n=this._moveFocus(this.selected,t);this.letters=this._move(e[n].querySelector(ve.valueSelector),this.letters),this.selected=e[n],this.selected.focus(),this.selected.classList.add(ke)}},{key:"_moveFocus",value:function(t,e){var n=this.modal.querySelectorAll(we.selector),r=Array.prototype.indexOf.call(n,t);return n[r=(r=(r=-1===r?0:r+e)<0?n.length-1:r)>=n.length?0:r].focus(),r}},{key:"_getIndexOfLetter",value:function(t){var e=-1;return this.modal.querySelectorAll(ve.valueSelector).forEach(function(n,r){n===t&&(e=r)}),e}},{key:"_displayTask",value:function(){var t=this,e=document.createDocumentFragment();this.letters=ce.getRandomTask(),this.letters.forEach(function(n,r){var o=t._buildLetterElement(n,r);e.append(o)}),this.modal.querySelector(ve.container).append(e)}},{key:"_buildLetterElement",value:function(t,e){var n=this._buildElementWithClasses("span",ve.valueClass);n.innerHTML=t,n.setAttribute(ve.attribute.name,ve.attribute.value);var r=this._buildElementWithClasses("div","letter",we.class);return r.setAttribute(ve.attr,e),r.append(n),r}},{key:"_buildElementWithClasses",value:function(t){for(var e,n=document.createElement(t),r=arguments.length,o=new Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];o&&0!==o.length&&(e=n.classList).add.apply(e,o);return n}},{key:"_buildAnswer",value:function(){for(var t=this.modal.querySelector(ve.container).querySelectorAll(ve.selector),e="",n=0;n<t.length;n+=1)e+=t[n].textContent;return e}}])&&fe(n.prototype,r),o&&fe(n,o),e}();function xe(t){return(xe="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Oe(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=[],r=!0,o=!1,i=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){o=!0,i=t}finally{try{r||null==s.return||s.return()}finally{if(o)throw i}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function Se(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function Pe(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ae(t,e){return!e||"object"!==xe(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ee(t,e,n){return(Ee="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Te(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}})(t,e,n||t)}function Te(t){return(Te=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Re(t,e){return(Re=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var je=".task-container_element",Ie="id",Ce=13,Le=function(t){function e(){var t;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(t=Ae(this,Te(e).call(this))).tasks=t.initTasks(),t}var n,r,o;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Re(t,e)}(e,ft),n=e,(r=[{key:"initTasks",value:function(){return{math:Tt,translation:Nt,audition:re,word:_e}}},{key:"choseComponent",value:function(){var t,n=(t=regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return Ee(Te(e.prototype),"show",this).call(this),this.modal.innerHTML=it.a,t.abrupt("return",this.initActions());case 3:case"end":return t.stop()}},t,this)}),function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){Se(i,r,o,a,s,"next",t)}function s(t){Se(i,r,o,a,s,"throw",t)}a(void 0)})});return function(){return n.apply(this,arguments)}}()},{key:"initActions",value:function(){var t=this;return new Promise(function(e){t.modal.addEventListener("click",function(n){var r=n.target.closest(je).getAttribute(Ie),o=t.getInstanceOfTask(r);o&&(t.clean(),e(o))}),t.modal.addEventListener("keyup",function(t){t.keyCode===Ce&&t.target.click()})})}},{key:"getInstanceOfTask",value:function(t){var e=this.tasks[t];e||(e=Oe(this.tasks,1)[0]);return Object.create(e.prototype)}}])&&Pe(n.prototype,r),o&&Pe(n,o),e}();function Me(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var qe={width:.1,height:.1},He={prefix:"Level: ",style:"48px serif"},We=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.ctx=e,this.session=n}var e,n,r;return e=t,(n=[{key:"draw",value:function(){this._drawLevel(),this._requestAnimationFrame()}},{key:"_drawLevel",value:function(){var t=document.body.offsetHeight*qe.height,e=document.body.offsetWidth*qe.width;this.ctx.save(),this.ctx.font=He.style,this.ctx.fillText(He.prefix+this.session.level,e,t),this.ctx.restore()}},{key:"_requestAnimationFrame",value:function(){this._cancelAnimationFrame(),this.reqId=requestAnimationFrame(this.draw.bind(this))}},{key:"_cancelAnimationFrame",value:function(){this.reqId&&cancelAnimationFrame(this.reqId)}}])&&Me(e.prototype,n),r&&Me(e,r),t}(),Fe=n(67);function De(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var ze=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,r=[{key:"build",value:function(){var e=t.getRandomValue(Fe.firstName),n=t.getRandomValue(Fe.lastName),r=t.getRandomValue(Fe.middleName);return"".concat(e," ").concat(n," ").concat(r)}},{key:"getRandomValue",value:function(t){return t[Math.floor(Math.random()*t.length)]}}],(n=null)&&De(e.prototype,n),r&&De(e,r),t}();function Ne(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function Be(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){Ne(i,r,o,a,s,"next",t)}function s(t){Ne(i,r,o,a,s,"throw",t)}a(void 0)})}}function Ve(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Ue="div.container",Je="canvas",Ke=10,Ge=0,Qe=0,Xe=1,Ye={text:"Please wait. Loading components.",style:"bold 3em serif",color:"white"},Ze=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,n=[{key:"start",value:function(){var t=Be(regeneratorRuntime.mark(function t(e){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return this.session=e,this.session.level=Qe,this.loaded=!1,this.init(),t.next=6,Promise.all([this.initPerson(),this.initMonster()]);case 6:return this.initLevelInfo(),this.loaded=!0,t.abrupt("return",this.getFightResult());case 9:case"end":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:"init",value:function(){t.initTemplate(),this.canvas=document.querySelector("canvas"),this.ctx=this.canvas.getContext("2d"),this.ctx.imageSmoothingEnabled=!1,this.taskChooser=new Le,this.refreshScreen()}},{key:"refreshScreen",value:function(){var t=this;this.canvas.width=this.canvas.width,this.frameId&&window.cancelAnimationFrame(this.frameId),this.loaded||this._drawBanner(),this.frameId=window.requestAnimationFrame(function(){return t.refreshScreen()})}},{key:"nextLevel",value:function(){var t=Be(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.monster.death();case 2:return this.session.level+=Xe,this.loaded=!1,t.next=6,this.initMonster(this.session);case 6:this.loaded=!0;case 7:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:"initPerson",value:function(){return this.person=new B(this.ctx,this.session.nickName),this.person.build()}},{key:"initMonster",value:function(){return this.monster=new rt(this.ctx,ze.build()),this.monster.build()}},{key:"initLevelInfo",value:function(){this.levelInfo=new We(this.ctx,this.session).draw()}},{key:"getFightResult",value:function(){var t=Be(regeneratorRuntime.mark(function t(){var e=this;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",this.taskChooser.choseComponent().then(function(t){return t.execute()}).then(function(t){return t?e.person.attack(function(){e.monster.health=Ke}):e.monster.attack(function(){e.person.health=Ke})}).then(Be(regeneratorRuntime.mark(function t(){return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(e.monster.health!==Ge){t.next=3;break}return t.next=3,e.nextLevel();case 3:if(e.person.health!==Ge){t.next=5;break}return t.abrupt("return",e._buildResult());case 5:return t.abrupt("return",e.getFightResult());case 6:case"end":return t.stop()}},t,this)}))));case 1:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:"_buildResult",value:function(){return this.session}},{key:"_drawBanner",value:function(){this.ctx.save(),this.ctx.font=Ye.style,this.ctx.fillStyle=Ye.color;var t=this.canvas.height/2,e=this.canvas.width/2,n=this.ctx.measureText(Ye.text).width;this.ctx.fillText(Ye.text,e-n/2,t),this.ctx.restore()}}],r=[{key:"initTemplate",value:function(){document.body.querySelector(Ue).innerHTML=O.a;var t=document.body.querySelector(Je);t.setAttribute("width",document.body.offsetWidth),t.setAttribute("height",document.body.offsetHeight)}}],n&&Ve(e.prototype,n),r&&Ve(e,r),t}(),$e=n(136),tn=n.n($e),en=n(137),nn=n.n(en);n(331);function rn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var on="rss-game-score-storage",an=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,(n=[{key:"store",value:function(t){if(t){var e=this.load();e.push({name:t.nickName,level:t.level}),this._save(e)}}},{key:"load",value:function(){var t=localStorage.getItem(on);return t?JSON.parse(t):this._save([])}},{key:"_save",value:function(t){return localStorage.setItem(on,JSON.stringify(t)),t}}])&&rn(e.prototype,n),r&&rn(e,r),t}();function sn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var cn={url:"https://rss-facepalm.herokuapp.com/scores",headers:{Accept:"application/json","Content-Type":"application/json"}},un=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n,r;return e=t,(n=[{key:"store",value:function(t){return t?fetch(cn.url,{method:"POST",headers:cn.headers,body:JSON.stringify({name:t.nickName,level:t.level})}):null}},{key:"load",value:function(){return fetch(cn.url).then(function(t){return t.json()})}}])&&sn(e.prototype,n),r&&sn(e,r),t}();function ln(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function fn(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){ln(i,r,o,a,s,"next",t)}function s(t){ln(i,r,o,a,s,"throw",t)}a(void 0)})}}function hn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var dn="div.container",pn="div.score-container table>tbody",mn="start",vn=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.storage=new un,this.oldStorage=new an}var e,n,r;return e=t,(n=[{key:"storeResult",value:function(t){return this.storage.store(t)}},{key:"show",value:function(){var t=fn(regeneratorRuntime.mark(function t(){var e;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return document.body.querySelector(dn).innerHTML=nn.a,t.next=3,this.storage.load();case 3:return e=t.sent,document.body.querySelector(dn).innerHTML=tn.a,t.next=7,this._drawScores(e);case 7:return t.abrupt("return",this._initEventListeners());case 8:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}}()},{key:"hide",value:function(){document.body.querySelector(dn).innerHTML=null}},{key:"_initEventListeners",value:function(){return new Promise(function(t){var e=document.body.querySelector("button");e.focus(),e.addEventListener("click",function(){return t(mn)})})}},{key:"_drawScores",value:function(){var t=fn(regeneratorRuntime.mark(function t(e){var n,r=this;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:n=document.createDocumentFragment(),e.sort(function(t,e){return e.level-t.level}).slice(0,10).forEach(function(t){var e=r._createElementWithClass("tr"),o=r._createElementWithClass("td");o.innerHTML=t.name;var i=r._createElementWithClass("td");i.innerHTML=t.level,e.append(o,i),n.append(e)}),document.body.querySelector(pn).append(n);case 3:case"end":return t.stop()}},t,this)}));return function(e){return t.apply(this,arguments)}}()},{key:"_createElementWithClass",value:function(t){for(var e=document.createElement(t),n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return r.forEach(function(t){return e.classList.append(t)}),e}}])&&hn(e.prototype,n),r&&hn(e,r),t}();function yn(t,e,n,r,o,i,a){try{var s=t[i](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,o)}function gn(t){return function(){var e=this,n=arguments;return new Promise(function(r,o){var i=t.apply(e,n);function a(t){yn(i,r,o,a,s,"next",t)}function s(t){yn(i,r,o,a,s,"throw",t)}a(void 0)})}}var bn={start:_,score:vn};function wn(t){return kn.apply(this,arguments)}function kn(){return(kn=gn(regeneratorRuntime.mark(function t(e){var n,r;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(bn[e]!==_){t.next=9;break}return t.next=3,_.show();case 3:return n=t.sent,t.next=6,(new Ze).start({nickName:n});case 6:return r=t.sent,t.next=9,(new vn).storeResult(r);case 9:return t.t0=wn,t.next=12,(new vn).show();case 12:t.t1=t.sent,(0,t.t0)(t.t1);case 14:case"end":return t.stop()}},t,this)}))).apply(this,arguments)}(function(){var t=gn(regeneratorRuntime.mark(function t(){var e;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return u.init(),t.next=3,p.show();case 3:return e=t.sent,t.abrupt("return",wn(e));case 5:case"end":return t.stop()}},t,this)}));return function(){return t.apply(this,arguments)}})()()},5:function(t){t.exports={breath:{min:-1,max:3,interval:5,current:0,step:.1},scaleRation:6,numberOfParts:5,image:{path:"./images/person/",ext:".png"},head:{image:"head",ratio:{height:.77,width:.29}},body:{image:"body",ratio:{height:.84,width:.295}},legs:{image:"legs",ratio:{height:.92,width:.3}},arms:{image:{left:"arm_left",right:"arm_right"},ratio:{left:{height:.85,width:.32},right:{height:.85,width:.29}},position:{left:{height:0,width:90},right:{height:0,width:85}},attack:{angle:90,step:10}},hp:{value:100,status:{NORMAL:{color:"green",value:80},AVERAGE:{color:"#f49842",value:70},CRITICAL:{color:"red",value:40}},position:{height:.75,width:.3}},text:{style:"48px serif"},name:{position:{height:.7,width:.3}}}},52:function(t){t.exports={operators:["+","-","/","*"],values:{min:0,max:20}}},6:function(t){t.exports={breath:{min:-1,max:5,interval:2,current:0,step:.1},numberOfMonsters:5,numberOfParts:5,image:{path:"./images/monster/",ext:".png"},head:{image:"head_",ratio:{height:.72,width:.7}},body:{image:"body_",ratio:{height:.74,width:.7}},legs:{image:"legs_",ratio:{height:.9,width:.715}},arms:{image:"arms_",ratio:{left:{height:.77,width:.62},right:{height:.77,width:.75}},position:{left:{height:0,width:90},right:{height:0,width:85}},attack:{angle:90,step:10,position:{height:.45,width:.6}}},hp:{value:100,status:{NORMAL:{color:"green",value:70},AVERAGE:{color:"#f49842",value:60},CRITICAL:{color:"red",value:30}},position:{height:.7,width:.72}},death:{image:"dead"},name:{position:{height:.6,width:.65}},text:{style:"48px serif"}}},64:function(t){t.exports={dictionary:[{word:"test",translations:["ÑÐµÑÑ","ÑÑÑÑ"]},{word:"table",translations:["ÑÑÐ¾Ð»","ÑÑÐ¾Ð»Ð¸Ðº"]},{word:"window",translations:["Ð¾ÐºÐ½Ð¾","Ð¾ÐºÐ¾ÑÐµÑÐºÐ¾","Ð¾ÐºÐ¾Ð½ÑÐµ"]},{word:"laptop",translations:["Ð½Ð¾ÑÑÐ±ÑÐº","ÐºÐ¾Ð¼Ð¿ÑÑÑÐµÑ"]}]}},65:function(t){t.exports={words:["test","table","window","approximately"]}},66:function(t){t.exports={words:["table","test","fest","work"]}},67:function(t){t.exports={firstName:["Ð£Ð¶Ð°ÑÐ½ÑÐ¹","ÐÐ»Ð¾Ð±Ð½ÑÐ¹","Ð¡Ð¾Ð¿Ð»Ð¸Ð²ÑÐ¹"],lastName:["ÐÐ³Ñ","ÐÐ½Ð¾Ð¼","ÐÐ¾Ð±Ð»Ð¸Ð½"],middleName:["Ð¢Ð¾Ð¼","ÐÐ°ÐºÑ","ÐÐ¸Ð¼Ð°"]}},95:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",function(){return MathService});var _files_config_json__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(52),_files_config_json__WEBPACK_IMPORTED_MODULE_0___namespace=__webpack_require__.t(52,1),_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(12);function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),t}var MathService=function(){function MathService(){_classCallCheck(this,MathService)}return _createClass(MathService,null,[{key:"getRandomTask",value:function(){var t=MathService.getOperand(),e=MathService.getOperand(),n=_files_config_json__WEBPACK_IMPORTED_MODULE_0__.operators[_util__WEBPACK_IMPORTED_MODULE_1__.a.random(_files_config_json__WEBPACK_IMPORTED_MODULE_0__.operators.length-1)];return"".concat(t," ").concat(n," ").concat(e)}},{key:"isAnswerValid",value:function isAnswerValid(task,answer){return Math.floor(eval(task))===answer}},{key:"getOperand",value:function(){return _util__WEBPACK_IMPORTED_MODULE_1__.a.random(_files_config_json__WEBPACK_IMPORTED_MODULE_0__.values.max,_files_config_json__WEBPACK_IMPORTED_MODULE_0__.values.min)}}]),MathService}()}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,